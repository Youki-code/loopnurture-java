---
description: 
globs: 
alwaysApply: true
---
# SQL 命名和结构规范

## 适用范围
1. 本规范适用于 mail 模块和 user 模块
2. 用户模块的建表语句维护在 users-service/src/main/resources/db/schema/user_schema.sql 文件中，表结构需要与实体映射相关
3. 邮件模块的建表语句维护在 mail-service/src/main/resources/db/schema/mail_schema.sql 文件中，表结构需要与实体映射相关

## 表命名规范
1. 表名使用小写字母，单词间用下划线分隔
2. 表名应该能清晰表达业务含义
3. 模块相关的表应该使用相同的前缀，如 marketing_*

## 字段命名规范
1. 字段名使用小写字母，单词间用下划线分隔
2. 主键统一使用 id 字段，类型为 BIGINT，采用自增 (GENERATED BY DEFAULT AS IDENTITY / SERIAL)
3. 创建时间统一使用 created_at
4. 更新时间统一使用 updated_at
5. 状态字段必须使用业务前缀 + "_status" 形式，如 enable_status、account_status、send_status；严禁出现孤立的 status 字段
6. 布尔类型字段使用 is_* 或 has_* 前缀
7. 所有表必须包含 extends_info 字段，类型 JSONB，用于存放灵活扩展信息
8. 所有表必须包含 deleted 字段，类型 BOOLEAN，默认值 false，用于软删除标记

## 类型规范
1. 字符串类型根据长度使用：
   - VARCHAR(n): 可变长度，n根据实际需求设置
   - TEXT: 长文本
2. 数字类型：
   - BIGINT: 长整型
   - INTEGER: 整型
   - DECIMAL(p,s): 精确数字
   - SMALLINT: 用于枚举类型字段
3. 时间类型统一使用 TIMESTAMP
4. 布尔类型使用 BOOLEAN
5. JSON类型使用 JSONB

## 枚举字段规范
1. 枚举字段统一使用 SMALLINT 类型存储
2. 必须在建表语句中添加注释说明枚举值含义
3. 枚举值从1开始递增
4. Java代码中使用对应的枚举类进行映射

## 索引规范
1. 索引名格式为 idx_{table_name}_{column_name}
2. 唯一索引名格式为 uk_{table_name}_{column_name}

## 约束规范
1. 主键约束：PRIMARY KEY
2. 唯一约束：UNIQUE
3. 非空约束：NOT NULL
4. 不使用外键约束，由应用层保证数据完整性
5. 枚举字段不添加 CHECK 约束，方便后续扩展

## 触发器规范
1. 触发器名格式为 {action}_{table_name}_{event}
2. 更新时间触发器必须实现

## 注释规范
1. 表必须添加注释，说明表的用途
2. 重要字段必须添加注释
3. 使用 -- 作为单行注释
4. 使用 /* */ 作为多行注释

## 版本控制
1. 所有表结构变更必须在对应模块的schema文件中进行
2. 变更需要添加变更说明注释
3. 保持向下兼容性

## 性能考虑
1. 合理使用索引
2. 避免过度索引
3. 大字段使用 TEXT 类型
4. 考虑分区表的使用场景 