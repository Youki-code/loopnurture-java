/*
 * User Module Database Schema
 * 用户模块数据库表结构
 */

-- =============================================
-- User Module Tables (用户模块表)
-- =============================================

-- 创建更新时间触发器函数
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- 创建营销用户表
CREATE TABLE marketing_user (
    id VARCHAR(36) PRIMARY KEY,                 -- 用户ID
    system_user_id BIGINT NOT NULL UNIQUE,      -- 系统用户ID，使用雪花算法生成
    user_uniq VARCHAR(100) NOT NULL,            -- 用户唯一标识
    auth_type SMALLINT,                         -- 认证类型：1=PASSWORD, 2=GOOGLE_OAUTH, 3=GITHUB_OAUTH, 4=FACEBOOK_OAUTH, 5=TWITTER_OAUTH, 6=LINKEDIN_OAUTH, 7=MICROSOFT_OAUTH, 8=APPLE_OAUTH
    oauth_user_id VARCHAR(100),                 -- OAuth用户ID
    password VARCHAR(255),                      -- 加密后的密码
    user_type SMALLINT,                         -- 用户类型：1=PERSONAL, 2=ENTERPRISE, 3=ADMIN, 4=SERVICE_ACCOUNT
    extends_info TEXT,                          -- 用户扩展信息，存储JSON格式的扩展字段（包含OAuth信息等）
    
    -- 基本信息
    nickname VARCHAR(100),                      -- 用户昵称
    avatar_url TEXT,                            -- 头像URL
    
    -- 联系方式
    primary_email VARCHAR(100),                 -- 主要邮箱
    backup_email VARCHAR(100),                  -- 备用邮箱
    phone VARCHAR(20),                          -- 手机号码
    telephone VARCHAR(20),                      -- 固定电话

    -- 个人设置偏好
    language_preference VARCHAR(5),             -- 语言偏好：en-US, zh-CN, zh-TW, ja-JP, ko-KR
    timezone VARCHAR(50),                       -- 用户时区
    
    -- 账户状态
    account_status SMALLINT DEFAULT 1,          -- 账户状态：1=ACTIVE, 2=LOCKED, 3=DISABLED, 4=DELETED, 5=PENDING_VERIFICATION
    email_verified BOOLEAN DEFAULT false,       -- 邮箱是否验证
    phone_verified BOOLEAN DEFAULT false,       -- 手机是否验证
    
    -- 审计字段
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_login_at TIMESTAMP,                    -- 最后登录时间
    
    -- 约束
    CONSTRAINT user_uniq_unique UNIQUE (user_uniq),
    CONSTRAINT primary_email_unique UNIQUE (primary_email),
    CONSTRAINT phone_unique UNIQUE (phone)
);

-- 创建用户表索引
CREATE INDEX idx_marketing_user_oauth ON marketing_user(oauth_user_id, auth_type) WHERE oauth_user_id IS NOT NULL;
CREATE INDEX idx_marketing_user_email ON marketing_user(primary_email) WHERE primary_email IS NOT NULL;
CREATE INDEX idx_marketing_user_phone ON marketing_user(phone) WHERE phone IS NOT NULL;

-- 创建用户表更新时间触发器
CREATE TRIGGER update_marketing_user_updated_at
    BEFORE UPDATE ON marketing_user
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 创建组织表
CREATE TABLE organization (
    id VARCHAR(36) PRIMARY KEY,
    org_code VARCHAR(50) NOT NULL UNIQUE,      -- 组织编码
    org_name VARCHAR(100) NOT NULL,            -- 组织名称
    org_type SMALLINT NOT NULL,                -- 组织类型：1=ENTERPRISE, 2=TEAM, 3=PERSONAL
    org_status SMALLINT NOT NULL DEFAULT 1,    -- 组织状态：1=ACTIVE, 2=DISABLED, 3=PENDING, 4=DELETED
    description TEXT,                          -- 组织描述
    address TEXT,                              -- 组织地址
    phone VARCHAR(20),                         -- 联系电话
    email VARCHAR(100),                        -- 联系邮箱
    website VARCHAR(255),                      -- 组织网站
    logo_url TEXT,                            -- 组织Logo URL
    max_users INTEGER DEFAULT 5,               -- 最大用户数
    max_templates INTEGER DEFAULT 100,         -- 最大模板数
    max_rules INTEGER DEFAULT 50,              -- 最大规则数
    settings JSONB,                           -- 组织设置，使用JSONB存储OrganizationSettingsVO
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(36) NOT NULL,           -- 创建人ID
    updated_by VARCHAR(36) NOT NULL            -- 更新人ID
);

-- 创建组织表索引
CREATE INDEX idx_organization_code ON organization(org_code);
CREATE INDEX idx_organization_type ON organization(org_type);
CREATE INDEX idx_organization_status ON organization(org_status);
CREATE INDEX idx_organization_created_by ON organization(created_by);
CREATE INDEX idx_organization_updated_by ON organization(updated_by);

-- 创建组织表更新时间触发器
CREATE TRIGGER update_organization_updated_at
    BEFORE UPDATE ON organization
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 创建用户-组织关联表
CREATE TABLE user_organization (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    system_user_id BIGINT NOT NULL,            -- 系统用户ID
    org_id VARCHAR(36) NOT NULL,               -- 组织ID
    role SMALLINT NOT NULL,                    -- 用户角色：1=ADMIN, 2=MEMBER, 3=VIEWER
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(64) NOT NULL,           -- 创建人ID
    updated_by VARCHAR(64) NOT NULL,           -- 更新人ID
    
    -- 约束
    CONSTRAINT fk_user_org_user FOREIGN KEY (system_user_id) REFERENCES marketing_user(system_user_id),
    CONSTRAINT fk_user_org_org FOREIGN KEY (org_id) REFERENCES organization(id),
    CONSTRAINT uk_user_org UNIQUE (system_user_id, org_id)
);

-- 创建用户-组织关联表索引
CREATE INDEX idx_user_org_user_id ON user_organization(system_user_id);
CREATE INDEX idx_user_org_org_id ON user_organization(org_id);

-- 创建用户-组织关联表更新时间触发器
CREATE TRIGGER update_user_organization_updated_at
    BEFORE UPDATE ON user_organization
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column(); 